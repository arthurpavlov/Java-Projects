package command;

import java.util.List;
import java.util.Set;

import outputlocation.OutputLocation;

/**
 * This class represents contextual data passed to commands in order for
 * the commands to execute.
 *
 * Eventually, this class could contain things like stdin, pipes, and other
 * bash concepts.
 */
public final class CommandData {

  private final String commandName;
  private final List<String> parameters;
  private final OutputLocation outputLocation;
  private final OutputLocation errorOutputLocation;
  private final Set<String> toggleFlags;

  /**
   * @param commandName         the name of the command whose data this is
   * @param parameters          the list of parameters that should be
   *                            processed by the command
   * @param outputLocation      where the standard output of this command
   *                            should be sent
   * @param errorOutputLocation where any error messages generated by the
   *                            command processing this data should be sent
   * @param toggleFlags         a list of single character strings which
   *                            represent user supplied flags in the unix style
   */
  public CommandData(String commandName, List<String> parameters,
                     OutputLocation outputLocation,
                     OutputLocation errorOutputLocation,
                     Set<String> toggleFlags) {
    if (commandName == null) {
      throw new IllegalArgumentException("command name");
    }
    if (parameters == null) {
      throw new IllegalArgumentException("parameters");
    }
    if (outputLocation == null) {
      throw new IllegalArgumentException("output location");
    }
    if (toggleFlags == null) {
      throw new IllegalArgumentException("toggle flags");
    }
    this.commandName = commandName;
    this.parameters = parameters;
    this.outputLocation = outputLocation;
    this.errorOutputLocation = errorOutputLocation;
    this.toggleFlags = toggleFlags;
  }

  /**
   * @return the name of the command which instantiated this command data.
   */
  public String getCommandName() {
    return commandName;
  }

  /**
   * @return the list of cleaned parameters, not including flags, pipes, or
   * other special operators.
   */
  public List<String> getParameters() {
    return parameters;
  }

  /**
   * @return the output location for the standard output of this command.
   */
  public OutputLocation getOutputLocation() {
    return outputLocation;
  }

  /**
   * @return the output location for error messages for this command
   */
  public OutputLocation getErrorOutputLocation() {
    return errorOutputLocation;
  }

  /**
   * These are the single character unix-like flags, i.e -xvzf would be four
   * different strings in this set, {"x", "v", "z", "f"}
   *
   * @return the boolean on/off flags passed to this command
   */
  public Set<String> getToggleFlags() {
    return toggleFlags;
  }
}
